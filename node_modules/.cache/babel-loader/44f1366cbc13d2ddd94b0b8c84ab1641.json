{"ast":null,"code":"import _classCallCheck from \"/Users/ervinjusufagic/Projects/zacco-sudoku/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ervinjusufagic/Projects/zacco-sudoku/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ervinjusufagic/Projects/zacco-sudoku/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ervinjusufagic/Projects/zacco-sudoku/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ervinjusufagic/Projects/zacco-sudoku/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ervinjusufagic/Projects/zacco-sudoku/src/components/GameBoard.js\";\nimport React, { Component } from \"react\";\nimport { Cell } from \"./Cell\";\n\nvar GameBoard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GameBoard, _Component);\n\n  function GameBoard(props) {\n    var _this;\n\n    _classCallCheck(this, GameBoard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GameBoard).call(this, props));\n    _this.state = {\n      columns: []\n    };\n    console.log(_this.props);\n    return _this;\n  }\n\n  _createClass(GameBoard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        columns: this.props.columns\n      });\n      console.log(this.props);\n    }\n  }, {\n    key: \"renderCells\",\n    value: function renderCells() {\n      for (var i = 0; i < this.state.columns.length; i++) {\n        return this.state.columns[i].map(function (column) {\n          return column.map(function (num) {\n            return React.createElement(Cell, {\n              key: column,\n              text: num,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"gameBoard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.renderCells());\n    }\n  }]);\n\n  return GameBoard;\n}(Component);\n\nexport { GameBoard };","map":{"version":3,"sources":["/Users/ervinjusufagic/Projects/zacco-sudoku/src/components/GameBoard.js"],"names":["React","Component","Cell","GameBoard","props","state","columns","console","log","setState","i","length","map","column","num","renderCells"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,QAArB;;IACMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAKJ,KAAjB;AAJiB;AAKlB;;;;yCAEoB;AACnB,WAAKK,QAAL,CAAc;AACZH,QAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE;AADR,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACD;;;kCAEa;AACZ,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKL,KAAL,CAAWC,OAAX,CAAmBK,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAClD,eAAO,KAAKL,KAAL,CAAWC,OAAX,CAAmBI,CAAnB,EAAsBE,GAAtB,CAA0B,UAAAC,MAAM;AAAA,iBACrCA,MAAM,CAACD,GAAP,CAAW,UAAAE,GAAG;AAAA,mBAAI,oBAAC,IAAD;AAAM,cAAA,GAAG,EAAED,MAAX;AAAmB,cAAA,IAAI,EAAEC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ;AAAA,WAAd,CADqC;AAAA,SAAhC,CAAP;AAGD;AACF;;;6BAEQ;AACP,aAAO;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,KAAKC,WAAL,EAA5B,CAAP;AACD;;;;EAzBqBd,S;;AA4BxB,SAASE,SAAT","sourcesContent":["import React, { Component } from \"react\";\nimport { Cell } from \"./Cell\";\nclass GameBoard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { columns: [] };\n    console.log(this.props);\n  }\n\n  componentWillMount() {\n    this.setState({\n      columns: this.props.columns\n    });\n    console.log(this.props);\n  }\n\n  renderCells() {\n    for (let i = 0; i < this.state.columns.length; i++) {\n      return this.state.columns[i].map(column =>\n        column.map(num => <Cell key={column} text={num} />)\n      );\n    }\n  }\n\n  render() {\n    return <div className=\"gameBoard\">{this.renderCells()}</div>;\n  }\n}\n\nexport { GameBoard };\n"]},"metadata":{},"sourceType":"module"}