{"ast":null,"code":"import _classCallCheck from \"/Users/ervinjusufagic/Projects/zacco-sudoku/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ervinjusufagic/Projects/zacco-sudoku/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ervinjusufagic/Projects/zacco-sudoku/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ervinjusufagic/Projects/zacco-sudoku/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ervinjusufagic/Projects/zacco-sudoku/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ervinjusufagic/Projects/zacco-sudoku/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ervinjusufagic/Projects/zacco-sudoku/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      puzzle: [],\n      rows: [],\n      solution: [],\n      isLoading: true,\n      selectedCell: null,\n      cellIndex: 0\n    };\n    _this.handleSelectedCell = _this.handleSelectedCell.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeNumber = _this.changeNumber.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getPuzzle();\n    }\n  }, {\n    key: \"getPuzzle\",\n    value: function getPuzzle() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:3000/puzzles\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this2.setState({\n          puzzle: responseJson.puzzles[0],\n          solution: responseJson.solution\n        });\n\n        _this2.splitPuzzle();\n\n        console.log(_this2.state.puzzle);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"splitPuzzle\",\n    value: function splitPuzzle() {\n      var rows = [[], [], [], [], [], [], [], [], []];\n      rows[0].push(this.state.puzzle.puzzle.slice(0, 9));\n      rows[1].push(this.state.puzzle.puzzle.slice(9, 18));\n      rows[2].push(this.state.puzzle.puzzle.slice(18, 27));\n      rows[3].push(this.state.puzzle.puzzle.slice(27, 36));\n      rows[4].push(this.state.puzzle.puzzle.slice(36, 45));\n      rows[5].push(this.state.puzzle.puzzle.slice(45, 54));\n      rows[6].push(this.state.puzzle.puzzle.slice(54, 63));\n      rows[7].push(this.state.puzzle.puzzle.slice(63, 72));\n      rows[8].push(this.state.puzzle.puzzle.slice(72, 81));\n      this.setState({\n        rows: rows,\n        isLoading: false\n      });\n      console.log(this.state.rows);\n    }\n  }, {\n    key: \"renderCells\",\n    value: function renderCells(i) {\n      var _this3 = this;\n\n      var j = 0;\n      return this.state.rows[i][0].map(function (cell) {\n        return cell != 0 ? React.createElement(\"div\", {\n          className: \"cell\",\n          key: j++,\n          style: _this3.renderBorders(_this3.state.cellIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          value: _this3.state.cellIndex++,\n          onClick: _this3.handleSelectedCell,\n          disabled: true,\n          className: \"cellBtn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"cellNum\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, cell))) : React.createElement(\"div\", {\n          className: \"cell\",\n          key: j++,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          style: _this3.renderBorders(_this3.state.cellIndex),\n          value: _this3.state.cellIndex++,\n          onClick: _this3.handleSelectedCell,\n          className: \"cellBtn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"cellNum\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"\")));\n      });\n    }\n  }, {\n    key: \"renderBorders\",\n    value: function renderBorders(i) {\n      if (i == 0) {\n        return {\n          borderLeft: \"3px solid red\",\n          borderTop: \"3px solid red\"\n        };\n      }\n\n      if (i == 1) {\n        return {\n          borderTop: \"3px solid red\"\n        };\n      }\n\n      if (i == 2) {\n        return {\n          borderTop: \"3px solid red\",\n          borderRight: \"3px solid red\"\n        };\n      }\n\n      if (i == 9) {\n        return {\n          borderLeft: \"3px solid red\"\n        };\n      }\n\n      if (i == 11) {\n        return {\n          borderLeft: \"3px solid red\"\n        };\n      }\n    }\n  }, {\n    key: \"handleSelectedCell\",\n    value: function handleSelectedCell(event) {\n      this.state.selectedCell = event.target.value;\n      console.log(this.state.selectedCell);\n    }\n  }, {\n    key: \"changeNumber\",\n    value: function changeNumber(event) {\n      var oldnumbers = this.state.puzzle.puzzle;\n      var updatedNumbers;\n      oldnumbers[this.state.selectedCell] = event.target.value;\n      updatedNumbers = oldnumbers;\n      this.splitPuzzle();\n      this.setState({\n        selectedCell: null,\n        cellIndex: 0,\n        oldnumbers: updatedNumbers\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"appView\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, this.state.isLoading ? \"loading\" : React.createElement(\"div\", {\n        className: \"gameBoard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cellContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this.renderCells(0)), React.createElement(\"div\", {\n        className: \"cellContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, this.renderCells(1)), React.createElement(\"div\", {\n        className: \"cellContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, this.renderCells(2))), React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cellContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, this.renderCells(3)), React.createElement(\"div\", {\n        className: \"cellContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, this.renderCells(4)), React.createElement(\"div\", {\n        className: \"cellContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.renderCells(5))), React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cellContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, this.renderCells(6)), React.createElement(\"div\", {\n        className: \"cellContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.renderCells(7)), React.createElement(\"div\", {\n        className: \"cellContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, this.renderCells(8)))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        value: 1,\n        onClick: this.changeNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"button\", {\n        value: 2,\n        onClick: this.changeNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"button\", {\n        value: 3,\n        onClick: this.changeNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"3\"), React.createElement(\"button\", {\n        value: 4,\n        onClick: this.changeNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"4\"), React.createElement(\"button\", {\n        value: 5,\n        onClick: this.changeNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"5\"), React.createElement(\"button\", {\n        value: 6,\n        onClick: this.changeNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"6\"), React.createElement(\"button\", {\n        value: 7,\n        onClick: this.changeNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"7\"), React.createElement(\"button\", {\n        value: 8,\n        onClick: this.changeNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"8\"), React.createElement(\"button\", {\n        value: 9,\n        onClick: this.changeNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"9\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Check progress\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/ervinjusufagic/Projects/zacco-sudoku/src/App.js"],"names":["React","Component","App","props","state","puzzle","rows","solution","isLoading","selectedCell","cellIndex","handleSelectedCell","bind","changeNumber","getPuzzle","fetch","method","headers","then","response","json","responseJson","setState","puzzles","splitPuzzle","console","log","catch","error","push","slice","i","j","map","cell","renderBorders","borderLeft","borderTop","borderRight","event","target","value","oldnumbers","updatedNumbers","renderCells"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelectedCell = this.handleSelectedCell.bind(this);\n    this.changeNumber = this.changeNumber.bind(this);\n  }\n  state = {\n    puzzle: [],\n    rows: [],\n    solution: [],\n    isLoading: true,\n    selectedCell: null,\n    cellIndex: 0\n  };\n\n  componentWillMount() {\n    this.getPuzzle();\n  }\n\n  getPuzzle() {\n    fetch(\"http://localhost:3000/puzzles\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => response.json())\n      .then(responseJson => {\n        this.setState({\n          puzzle: responseJson.puzzles[0],\n          solution: responseJson.solution\n        });\n        this.splitPuzzle();\n        console.log(this.state.puzzle);\n      })\n\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  splitPuzzle() {\n    const rows = [[], [], [], [], [], [], [], [], []];\n\n    rows[0].push(this.state.puzzle.puzzle.slice(0, 9));\n    rows[1].push(this.state.puzzle.puzzle.slice(9, 18));\n    rows[2].push(this.state.puzzle.puzzle.slice(18, 27));\n    rows[3].push(this.state.puzzle.puzzle.slice(27, 36));\n    rows[4].push(this.state.puzzle.puzzle.slice(36, 45));\n    rows[5].push(this.state.puzzle.puzzle.slice(45, 54));\n    rows[6].push(this.state.puzzle.puzzle.slice(54, 63));\n    rows[7].push(this.state.puzzle.puzzle.slice(63, 72));\n    rows[8].push(this.state.puzzle.puzzle.slice(72, 81));\n\n    this.setState({\n      rows: rows,\n      isLoading: false\n    });\n\n    console.log(this.state.rows);\n  }\n\n  renderCells(i) {\n    let j = 0;\n    return this.state.rows[i][0].map(cell =>\n      cell != 0 ? (\n        <div\n          className=\"cell\"\n          key={j++}\n          style={this.renderBorders(this.state.cellIndex)}\n        >\n          <button\n            value={this.state.cellIndex++}\n            onClick={this.handleSelectedCell}\n            disabled={true}\n            className=\"cellBtn\"\n          >\n            <span className=\"cellNum\">{cell}</span>\n          </button>\n        </div>\n      ) : (\n        <div className=\"cell\" key={j++}>\n          <button\n            style={this.renderBorders(this.state.cellIndex)}\n            value={this.state.cellIndex++}\n            onClick={this.handleSelectedCell}\n            className=\"cellBtn\"\n          >\n            <span className=\"cellNum\">{\"\"}</span>\n          </button>\n        </div>\n      )\n    );\n  }\n\n  renderBorders(i) {\n    if (i == 0) {\n      return { borderLeft: \"3px solid red\", borderTop: \"3px solid red\" };\n    }\n    if (i == 1) {\n      return { borderTop: \"3px solid red\" };\n    }\n    if (i == 2) {\n      return { borderTop: \"3px solid red\", borderRight: \"3px solid red\" };\n    }\n    if (i == 9) {\n      return { borderLeft: \"3px solid red\" };\n    }\n    if (i == 11) {\n      return { borderLeft: \"3px solid red\" };\n    }\n  }\n\n  handleSelectedCell(event) {\n    this.state.selectedCell = event.target.value;\n    console.log(this.state.selectedCell);\n  }\n\n  changeNumber(event) {\n    let oldnumbers = this.state.puzzle.puzzle;\n    let updatedNumbers;\n\n    oldnumbers[this.state.selectedCell] = event.target.value;\n    updatedNumbers = oldnumbers;\n\n    this.splitPuzzle();\n\n    this.setState({\n      selectedCell: null,\n      cellIndex: 0,\n      oldnumbers: updatedNumbers\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"appView\">\n        {this.state.isLoading ? (\n          \"loading\"\n        ) : (\n          <div className=\"gameBoard\">\n            <div className=\"grid\">\n              <div className=\"cellContainer\">{this.renderCells(0)}</div>\n              <div className=\"cellContainer\">{this.renderCells(1)}</div>\n              <div className=\"cellContainer\">{this.renderCells(2)}</div>\n            </div>\n            <div className=\"grid\">\n              <div className=\"cellContainer\">{this.renderCells(3)}</div>\n              <div className=\"cellContainer\">{this.renderCells(4)}</div>\n              <div className=\"cellContainer\">{this.renderCells(5)}</div>\n            </div>\n            <div className=\"grid\">\n              <div className=\"cellContainer\">{this.renderCells(6)}</div>\n              <div className=\"cellContainer\">{this.renderCells(7)}</div>\n              <div className=\"cellContainer\">{this.renderCells(8)}</div>\n            </div>\n          </div>\n        )}\n\n        <div>\n          <button value={1} onClick={this.changeNumber}>\n            1\n          </button>\n          <button value={2} onClick={this.changeNumber}>\n            2\n          </button>\n          <button value={3} onClick={this.changeNumber}>\n            3\n          </button>\n          <button value={4} onClick={this.changeNumber}>\n            4\n          </button>\n          <button value={5} onClick={this.changeNumber}>\n            5\n          </button>\n          <button value={6} onClick={this.changeNumber}>\n            6\n          </button>\n          <button value={7} onClick={this.changeNumber}>\n            7\n          </button>\n          <button value={8} onClick={this.changeNumber}>\n            8\n          </button>\n          <button value={9} onClick={this.changeNumber}>\n            9\n          </button>\n        </div>\n\n        <div>\n          <button>Check progress</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}